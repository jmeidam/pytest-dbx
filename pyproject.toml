[tool.poetry]
name = "pytest-dbx"
version = "0.1.0"
description = "Pytest plugin to run unit tests for dbx (Databricks CLI extensions) related code"
authors = ["Jeroen Meidam <j.meidam@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/jmeidam/pytest-dbx"
repository = "https://github.com/jmeidam/pytest-dbx"
packages = [{include = "pytest_dbx"}]

[tool.poetry.dependencies]
python = "^3.9"
dbx = "^0.8.7"
delta-spark = "2.1.1"
ipython = "^8.5.0"
pytest = "^7.1.3"

[tool.poetry.group.dev.dependencies]
coverage = {extras = ["toml"], version = "^6.4.4"}
pytest-cov = "^3.0.0"
pytest-mock = "^3.3.1"
pytest-env = "^0.6.2"
Sphinx = "^4.3.2"
sphinx-rtd-theme = "^1.0.0"
black = "^22.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."pytest11"]
pytest_dbx = "pytest_dbx.fixtures"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
log_cli = 1
log_cli_level = "INFO"
log_cli_format = "[pytest][%(asctime)s][%(levelname)s][%(module)s][%(funcName)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "INFO"
filterwarnings = [
    "ignore::DeprecationWarning:py4j.*:",
    "ignore::DeprecationWarning:pyspark.*:",
    "ignore::DeprecationWarning:pyhocon.*:",
    "ignore::DeprecationWarning:distutils.*:"
]

[tool.black]
line-length = 120

[tool.coverage.run]
branch = true
source = [
    "pytest_dbx"
]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
ignore_errors = true
omit = [
    "tests/*"
]